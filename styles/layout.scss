@use 'sass:map';

.container {
    display: grid;
}

$layouts: (
    'xs': (
        'min-width': 0px,
        'max-width': 599px,
        'cols': 4,
        'body': calc(100vw - 32px),
        'gap': 16px,
        'margin': 16px,
    ),
    'sm': (
        'min-width': 600px,
        'max-width': 904px,
        'cols': 8,
        'body': calc(100vw - 64px),
        'gap': 16px,
        'margin': 32px,
    ),
    'md': (
        'min-width': 905px,
        'max-width': 1239px,
        'cols': 12,
        'body': 840px,
        'gap': 24px,
        'margin': calc((100vw - 840px) / 2),
    ),
    'lg': (
        'min-width': 1240px,
        'max-width': 1439px,
        'cols': 12,
        'body': calc(100vw - 400px),
        'gap': 32px,
        'margin': 200px,
    ),
    'xl': (
        'min-width': 1440px,
        'max-width': 100vw,
        'cols': 12,
        'body': 1040px,
        'gap': 32px,
        'margin': calc((100vw - 1040px) / 2),
    ),
);

@each $breakpoint, $layout in $layouts {
    // @media only screen and (min-width: map.get($layout, 'min-width')) and (max-width: map.get($layout, 'max-width')) {
    @media only screen and (min-width: map.get($layout, 'min-width')) {
        .container {
            padding: 0 map.get($layout, 'margin');
            grid-template-columns: repeat(
                map.get($layout, 'cols'),
                calc(
                    (
                            map.get($layout, 'body') -
                                (
                                    map.get($layout, 'gap') *
                                        (map.get($layout, 'cols') - 1)
                                )
                        ) / map.get($layout, 'cols')
                )
            );
            column-gap: map.get($layout, 'gap');
        }

        @for $i from 1 through map.get($layout, 'cols') {
            .col-#{$breakpoint}-#{$i} {
                grid-column-end: span $i;
            }
        }

        @for $i from 1 through map.get($layout, 'cols') {
            .off-#{$i} {
                grid-column-start: $i;
            }
            
            .off-#{$breakpoint}-#{$i} {
                grid-column-start: $i;
            }
        }

        .row {
            grid-column: span map.get($layout, 'cols');
        }
    }
}

// // xs - phone
// @media only screen and (max-width: 599px) {
//     .container {
//         grid-template-columns: repeat(4, 1fr);
//         column-gap: 16px;
//     }

//     @for $i from 1 through 4 {
//         .col-xs-#{$i} {
//             grid-column: span $i;
//         }
//     }
// }

// // sm - tablet
// @media only screen and (min-width: 600px) and (max-width: 904px) {
//     .container {
//         grid-template-columns: repeat(8, 1fr);
//         column-gap: 32px;
//     }

//     @for $i from 1 through 8 {
//         .col-sm-#{$i} {
//             grid-column: span $i;
//         }
//     }
// }

// // md - tablet
// @media only screen and (min-width: 905px) and (max-width: 1239px) {
//     .container {
//         grid-template-columns: repeat(12, 840px);
//         column-gap: auto;
//     }

//     @for $i from 1 through 12 {
//         .col-md-#{$i} {
//             grid-column: span $i;
//         }
//     }
// }

// // lg - laptop
// @media only screen and (min-width: 1240px) and (max-width: 1439px) {
//     .container {
//         grid-template-columns: repeat(12, 1fr);
//         column-gap: 200px;
//     }

//     @for $i from 1 through 12 {
//         .col-lg-#{$i} {
//             grid-column: span $i;
//         }
//     }
// }

// // xl - desktop
// @media only screen and (min-width: 1440px) {
//     .container {
//         grid-template-columns: repeat(12, 1040px);
//         column-gap: auto;
//     }

//     @for $i from 1 through 12 {
//         .col-xl-#{$i} {
//             grid-column: span $i;
//         }
//     }
// }
