openapi: 3.0.0
info:
    title: Lyrical Service
    version: 1.0.0
    description: Lyrical Service API Documentation

paths:
    /api/users/{id}/albums:
        get:
            summary: Get paginated albums that were authored or posted by a specified user
            description: This route returns a paginated list of albums, based on some filtering criteria
            tags:
                - albums
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: The id of the user
                - name: start
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Offset of results to start from
                - name: count
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Number of results to return
                - name: sort
                  in: query
                  schema:
                      type: string
                  description: The sort criteria
                - name: order
                  in: query
                  schema:
                      type: string
                  description: The order of the sorting
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AlbumCard'
                                description: List of matched albums

    /api/albums:
        get:
            summary: Get paginated albums by specified filters
            description: This route returns a paginated list of albums, based on some filtering criteria
            tags:
                - albums
            parameters:
                - name: query
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The query string to search by
                - name: start
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Offset of results to start from
                - name: count
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Number of results to return
                - name: sort
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The sort criteria
                - name: order
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The order of the sorting
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AlbumCard'
                                description: List of matched albums
        post:
            summary: Create a new album
            tags:
                - albums
                - auth
            parameters:
                - name: token
                  in: cookie
                  required: true
                  schema:
                      type: string
                  description: The authentication token
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                posterId:
                                    type: integer
                                    description: The id of the user that posted the album
                                authorId:
                                    type: integer
                                    description: The id of the user that authored the album
                                title:
                                    type: string
                                    description: The title of the album
                                publicationDate:
                                    type: string
                                    format: date-time
                                    description: Timestamp when the album has been officially released
                            required:
                                - posterId
                                - authorId
                                - title
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Album'
                '400':
                    description: Invalid data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Album'

    /api/albums/suggestions:
        get:
            summary: Get 5 suggestions of albums based on the given query
            description: This route returns a list of at most 5 albums that match the given query, this is like a mini version of search
            tags:
                - albums
            parameters:
                - name: query
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The query string to search by
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/AlbumCard'
                                description: List of matched albums

    /api/albums/{id}:
        get:
            summary: Get album by id
            tags:
                - albums
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: Id of the album
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Album'
                '404':
                    description: Album not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
        patch:
            summary: Update some of the album state
            description: Update the title of the album
            tags:
                - albums
                - auth
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: Id of the album
                - name: token
                  in: cookie
                  required: false
                  schema:
                      type: string
                  description: The authentication token
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                    description: The title of the album
                                publicationDate:
                                    type: string
                                    format: date-time
                                    description: Timestamp when the album has been officially released
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Album'
                '400':
                    description: Invalid data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '404':
                    description: Album not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
        delete:
            summary: Delete an album and it's related content by id
            tags:
                - albums
                - auth
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: Id of the album
                - name: token
                  in: cookie
                  required: true
                  schema:
                      type: string
                  description: The authentication token
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '404':
                    description: Album not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'

    /api/albums/{id}/poems:
        post:
            summary: Add a poem to this album
            tags:
                - albums
                - auth
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: Id of the album
                - name: token
                  in: cookie
                  required: true
                  schema:
                      type: string
                  description: The authentication token
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                poemId:
                                    type: integer
                                    description: The id of the poem to link to this album
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '400':
                    description: Poem is already in the album
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '404':
                    description: Album or poem not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'

    /api/albums/{id}/poems/{poemId}:
        delete:
            summary: Remove a poem from this album
            tags:
                - albums
                - auth
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: Id of the album
                - name: poemId
                  in: path
                  required: true
                  schema:
                      type: integer
                  description: Id of the poem
                - name: token
                  in: cookie
                  required: true
                  schema:
                      type: string
                  description: The authentication token
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '400':
                    description: Poem is not in album
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '404':
                    description: Album or poem not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'



    /api/poems:
        get:
            summary: Get paginated poems by specified filters
            description: This route returns a paginated list of poems, based on some filtering criteria
            tags:
                - poems
                - TODO
            parameters:
                - name: query
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The query string to search by
                - name: start
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Offset of results to start from
                - name: count
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Number of results to return
                - name: sort
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The sort criteria
                - name: order
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The order of the sorting
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PoemCard'
                                description: List of matched poems
        post:
            summary: Create a new poem
            tags:
                - poems
                - TODO
            responses:
                '201':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Poem'

    /api/poems/{id}:
        get:
            summary: Get poem by id
            tags:
                - poems
                - TODO
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Id of the poem
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Poem'
                '404':
                    description: Poem not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
        patch:
            summary: Update some of the poem state
            description: Update the first name and/or last name of the poem
            tags:
                - poems
                - TODO
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Id of the poem
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Poem'
                '404':
                    description: Poem not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
        delete:
            summary: Delete a poem and it's work by id
            tags:
                - poems
                - TODO
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Id of the poem
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '404':
                    description: Poem not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'

components:
    schemas:
        Message:
            type: object
            properties:
                code:
                    type: integer
                    description: The code of the message received (an error or a success message)
                message:
                    type: string
                    description: The english message associated with the code
            required:
                - code
                - message
        Album:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the album
                createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the album has been added to the site
                updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the album has been last updated on the site
                poster:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that posted the album
                author:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that authored the album
                title:
                    type: string
                    description: The title of the album
                publicationDate:
                    type: string
                    format: date-time
                    description: Timestamp when the album has been officially released
                poems:
                    type: array
                    items:
                        $ref: '#/components/schemas/PoemCard'
                    description: The list of poems part of this album
            required:
                - id
                - createdAt
                - updatedAt
                - poster
                - author
                - title
                - publicationDate
                - poems
        AlbumCard:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the album
                createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the album has been added to the site
                updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the album has been last updated on the site
                poster:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that posted the album
                author:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that authored the album
                title:
                    type: string
                    description: The title of the album
                publicationDate:
                    type: string
                    format: date-time
                    description: Timestamp when the album has been officially released
                poemsCount:
                    type: integer
                    description: The number of poems part of this album
            required:
                - id
                - createdAt
                - updatedAt
                - poster
                - author
                - title
                - publicationDate
                - poemsCount
        Poem:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the poem
                createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the poem has been added to the site
                updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the poem has been last updated on the site
                poster:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that posted the poem
                author:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that authored the poem
                title:
                    type: string
                    description: The title of the poem
                publicationDate:
                    type: string
                    format: date-time
                    description: Timestamp when the poem has been officially released
                lyrics:
                    $ref: '#/components/schemas/Lyrics'
                    description: The lyrics of the poem
            required:
                - id
                - createdAt
                - updatedAt
                - poster
                - author
                - title
                - publicationDate
                - lyrics
        PoemCard:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the poem
                createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the poem has been added to the site
                updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the poem has been last updated on the site
                poster:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that posted the poem
                author:
                    $ref: '#/components/schemas/UserCard'
                    description: The information of the user that authored the poem
                title:
                    type: string
                    description: The title of the poem
                publicationDate:
                    type: string
                    format: date-time
                    description: Timestamp when the poem has been officially released
            required:
                - id
                - createdAt
                - updatedAt
                - poster
                - author
                - title
                - publicationDate
        Lyrics:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the lyrics
                createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lyrics have been added to the site
                updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the lyrics have been last updated on the site
                poster:
                    $ref: '#/components/schemas/UserCard'
                    description: The poster of the lyrics
                title:
                    type: string
                    description: The title of the lyrics
                content:
                    type: string
                    description: The lyrics
                language:
                    type: string
                    description: The language the lyrics are written in
                mainAnnotation:
                    $ref: '#/components/schemas/MainAnnotation'
                    description: The main information about this poem
                annotations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Annotation'
                        description: An annotation of a segment of the lyrics
            required:
                - id
                - createdAt
                - updatedAt
                - poster
                - title
                - content
                - language
                - mainAnnotation
                - annotations
        MainAnnotation:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the annotation
                content:
                    type: string
                    description: The annotation
            required:
                - id
                - content
        Annotation:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier of the annotation
                offset:
                    type: integer
                    description: The position in the content where the annotation begins
                length:
                    type: integer
                    description: The length of the annotation
            required:
                - id
                - offset
                - length
        User:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the user
                roles:
                    type: integer
                    description: Roles assigned to the user
                nickname:
                    type: string
                    description: Nickname of the user
                lastName:
                    type: string
                    description: Last name of the user
                createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the user was created
                firstName:
                    type: string
                    description: First name of the user
                updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the user was last updated
                poemsCount:
                    type: integer
                    description: Count of poems created by the user
                albumsCount:
                    type: integer
                    description: Count of albums created by the user
                annotationsCount:
                    type: integer
                    description: Count of annotations created by the user
                poemsContributions:
                    type: integer
                    description: Number of poems the user has contributed to
                albumsContributions:
                    type: integer
                    description: Number of albums the user has contributed to
                createdLyricsCount:
                    type: integer
                    description: Count of lyrics created by the user
                lyricsContributions:
                    type: integer
                    description: Number of lyrics the user has contributed to
                translatedLyricsCount:
                    type: integer
                    description: Count of lyrics translated by the user
                annotationsContributions:
                    type: integer
                    description: Number of annotations the user has contributed to
            required:
                - id
                - roles
                - nickname
                - lastName
                - createdAt
                - firstName
                - updatedAt
                - poemsCount
                - albumsCount
                - annotationsCount
                - poemsContributions
                - albumsContributions
                - createdLyricsCount
                - lyricsContributions
                - translatedLyricsCount
                - annotationsContributions
        UserCard:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the user
                roles:
                    type: integer
                    description: Roles assigned to the user
                nickname:
                    type: string
                    description: Nickname of the user
                lastName:
                    type: string
                    description: Last name of the user
                firstName:
                    type: string
                    description: First name of the user
            required:
                - id
                - roles
                - nickname
                - lastName
                - firstName
