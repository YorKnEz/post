openapi: 3.0.0
info:
    title: Image Service
    version: 1.0.0
    description: Image Service API Documentation

paths:
    /api/images:
        post:
            summary: Upload an image to the server
            description: This route saves on the server an image given by a user, associates an id at runtime to it and returns an url pointing to the image, containing the id
            tags:
                - images
            security:
                - cookieAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
                            required:
                                - image
            responses:
                '200':
                    description: Uploaded image
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    url:
                                        type: string
                                        description: The url pointing to the image
                '400':
                    description: Invalid data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'

    /api/images/{id}:
        get:
            summary: Get an image from the server by an id
            tags:
                - images
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: The id generated by the server on post
            responses:
                '200':
                    description: Uploaded image
                    content:
                        image/png:
                            schema:
                                type: string
                                format: binary
                '404':
                    description: Image not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
        delete:
            summary: Delete an image from the server by an id
            tags:
                - images
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: The id generated by the server on post
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'
                '404':
                    description: Image not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Message'

components:
    securitySchemes:
        cookieAuth:
            type: apiKey
            in: cookie
            name: token
    schemas:
        Message:
            type: object
            properties:
                code:
                    type: integer
                    description: The code of the message received (an error or a success message)
                message:
                    type: string
                    description: The english message associated with the code
            required:
                - code
                - message
