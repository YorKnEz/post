openapi: 3.0.0
info:
    title: My API
    version: 1.0.0
    description: A simple API example

paths:
    /api/test:
        get:
            summary: Example route
            description: An example POST route with path and query parameters, and a JSON body.
            responses:
                '200':
                    description: Successful response
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Successfully processed the request

    /api/users/{id}:
        get:
            summary: Get user by id
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: Id of the user
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                '404':
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

    /api/users:
        get:
            summary: Get paginated users by specified filters
            description: This route returns a paginated list of users, based on some filtering criteria
            parameters:
                - name: query
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The query string to searchby
                - name: start
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Offset of results to start from
                - name: count
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: Number of results to return
                - name: sort
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The sort criteria
                - name: order
                  in: query
                  required: false
                  schema:
                      type: string
                  description: The order of the sorting
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                                description: List of matched users

    /api/example/{id}/test:
        post:
            summary: Example route
            description: An example POST route with path and query parameters, and a JSON body.
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                  description: The ID path parameter
                - name: a
                  in: query
                  required: false
                  schema:
                      type: string
                  description: Optional query parameter a
                - name: b
                  in: query
                  required: false
                  schema:
                      type: string
                  description: Optional query parameter b
                - name: c
                  in: query
                  required: true
                  schema:
                      type: string
                  description: Required query parameter c
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                                - preferences
                                - age
                            properties:
                                name:
                                    type: string
                                    description: The name of the user
                                preferences:
                                    type: array
                                    items:
                                        type: string
                                    description: A list of preferences
                                age:
                                    type: integer
                                    description: The age of the user
            responses:
                '200':
                    description: Successful response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Successfully processed the request
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                                        example: Invalid input

components:
    schemas:
        Error:
            type: object
            properties:
                code:
                    type: integer
                    description: The code of the error
                message:
                    type: string
                    description: A message regarding the cause of the error
            required:
                - code
                - message
        User:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the user
                roles:
                    type: integer
                    description: Roles assigned to the user
                nickname:
                    type: string
                    description: Nickname of the user
                last_name:
                    type: string
                    description: Last name of the user
                created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the user was created
                first_name:
                    type: string
                    description: First name of the user
                updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the user was last updated
                poems_count:
                    type: integer
                    description: Count of poems created by the user
                albums_count:
                    type: integer
                    description: Count of albums created by the user
                annotations_count:
                    type: integer
                    description: Count of annotations created by the user
                poems_contributions:
                    type: integer
                    description: Number of poems the user has contributed to
                albums_contributions:
                    type: integer
                    description: Number of albums the user has contributed to
                created_lyrics_count:
                    type: integer
                    description: Count of lyrics created by the user
                lyrics_contributions:
                    type: integer
                    description: Number of lyrics the user has contributed to
                translated_lyrics_count:
                    type: integer
                    description: Count of lyrics translated by the user
                annotations_contributions:
                    type: integer
                    description: Number of annotations the user has contributed to
            required:
                - id
                - roles
                - nickname
                - last_name
                - created_at
                - first_name
                - updated_at
                - poems_count
                - albums_count
                - annotations_count
                - poems_contributions
                - albums_contributions
                - created_lyrics_count
                - lyrics_contributions
                - translated_lyrics_count
                - annotations_contributions
